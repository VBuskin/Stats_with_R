{
  "hash": "f3b56444f025cd94018e44d549316dc0",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Mixed-effects regression\"\nauthor: Vladimir Buskin\nformat:\n  html:\n    self-contained: false\n    logo: logo.png\n    footer: \"Regression\"\n    theme: Reference\n    toc: true\n    number-sections: true\n    slide-number: true\n    incremental: false\n    slide-level: 4\n    scrollable: true\neditor: visual\nbibliography: R.bib\n---\n\n\n## Recommended reading\n\nSpecifically for linguists:\n\n> @paquot_mixed-effects_2020\n\nGeneral:\n\n> @gelmanDataAnalysisUsing2007\n\n## Preparation\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load libraries\nlibrary(lme4)\nlibrary(tidyverse)\nlibrary(broom)\nlibrary(ggeffects)\n\n# Load data\nvarmorph <- read.csv(\"varmorph_data.csv\", header = TRUE)\n\n# Reduce data\nvarmorph2 <- varmorph %>% select(rt, target, prime_type, subj_id)\n```\n:::\n\n\n## Multilevel models\n\nAt their core, mixed-effects models \"are extensions of regression in\nwhich data are structured in groups and coefficients can vary by group\"\n[@gelmanDataAnalysisUsing2007: 237]. Typical grouping structures found\nin linguistic data include speakers, regions, or lexical stimuli for\nwhich **multiple observations** are attested. Normally, such structures\nwould violate the assumption of independence, but can be controlled for\nby capturing group-wise tendencies.\n\nHere is a schematic representation of a hierarchically structured\ndataset:\n\n\n```{mermaid}\n%%| fig-width: 8\n%%| fig-height: 8\ngraph LR\n    A1[Participant 1] --> B11(Item 1) --> C11(Reaction time 1)\n    A1[Participant 1] --> B12(Item 2) --> C12(Reaction time 2)\n    A1[Participant 1] --> B13(Item ...) --> C13(Reaction time ...)\n\n    A2[Participant 2] --> B21(Item 1) --> C21(Reaction time 1)\n    A2[Participant 2] --> B22(Item 2) --> C22(Reaction time 2)\n    A2[Participant 2] --> B23(Item ...) --> C23(Reaction time ...)\n  \n    A3[Participant ...] --> B31(Item 1) --> C31(Reaction time 1)\n    A3[Participant ...] --> B32(Item 2) --> C32(Reaction time 2)\n    A3[Participant ...] --> B33(Item ...) --> C33(Reaction time ...)\n  \n```\n\n\n### Types of mixed-effects models\n\nVariance across groups can be captured by **varying-intercept** and/or\n**varying-slope** models. These varying coefficients also known as\n**random effects** (cf. @gelmanDataAnalysisUsing2007:\n245).[^mixed_effects_regression-1] In the model equation, the intercept\nand/or the slope is additionally indexed for the grouping factor. Let\n$J$ denote the number of groups for $j = 1, ..., J$.\n\n[^mixed_effects_regression-1]: Random effects are assumed to behave like\n    random variables and follow a normal distribution\n\n::: callout-note\n## Varying-intercept model\n\nWe allow group-wise variation in the intercept by replacing $\\beta_0$\nwith $\\beta_{0j}$ to indicate the intercept for the $j$-th group.\n\n$$\nY = \\beta_{0j} + \\beta_1X_{1} + \\beta_2X_{2} + ... + \\epsilon\n$$\n:::\n\n::: callout-note\n## Varying-slope model\n\nWe will allow group-wise variation in the slope coefficients by\nreplacing them with $\\beta_{ij}$ to indicate the slope for the $j$-th\ngroup.\\\n$$Y = \\beta_{0} + \\beta_{1j}X_{1} + \\beta_{2j}X_{2} + ... + \\epsilon $$\n:::\n\n### Crossed and nested effects\n\nAnother distinction often made in multilevel data with more than one\nrandom effect is between **nested** and **crossed** effects. This is\ndictated by the design of the study. In the priming data.\n\n### Linear mixed-effects models\n\n### Application in R\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Varying intercept model\n\n# Define reference level for \"prime_type\"\nvarmorph2$prime_type <- factor(varmorph2$prime_type, levels = c(\"unrelated\", \"derived\", \"inflected\", \"fillter\"))\n\n# Fit mixed-effects models\nvarmorph.me <- lmer(rt ~ prime_type + # fixed effect\n                      (1 | subj_id) + # let intercept vary by subject\n                      (1 | target), # # let intercept vary by target word\n                    data = varmorph2)\n\n# Summarise results\nsummary(varmorph.me)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nLinear mixed model fit by REML ['lmerMod']\nFormula: rt ~ prime_type + (1 | subj_id) + (1 | target)\n   Data: varmorph2\n\nREML criterion at convergence: 92843.6\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-2.2516 -0.5714 -0.1819  0.3212  7.5829 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n target   (Intercept)  3691     60.75  \n subj_id  (Intercept)  7694     87.71  \n Residual             29484    171.71  \nNumber of obs: 7038, groups:  target, 102; subj_id, 69\n\nFixed effects:\n                    Estimate Std. Error t value\n(Intercept)          715.703     12.659  56.537\nprime_typederived    -31.312      5.014  -6.246\nprime_typeinflected  -33.956      5.014  -6.773\n\nCorrelation of Fixed Effects:\n            (Intr) prm_typd\nprm_typdrvd -0.198         \nprm_typnflc -0.198  0.500  \n```\n\n\n:::\n\n```{.r .cell-code}\n# Varying-slope model\nvarmorph.me2 <- lmer(rt ~ prime_type +\n                      (1 + prime_type | subj_id),\n                     data = varmorph2)\n\nsummary(varmorph.me2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nLinear mixed model fit by REML ['lmerMod']\nFormula: rt ~ prime_type + (1 + prime_type | subj_id)\n   Data: varmorph2\n\nREML criterion at convergence: 93435.4\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-2.2721 -0.5930 -0.2214  0.3089  7.1532 \n\nRandom effects:\n Groups   Name                Variance  Std.Dev. Corr       \n subj_id  (Intercept)          7543.550  86.854             \n          prime_typederived     192.590  13.878   0.19      \n          prime_typeinflected     4.028   2.007  -0.47 -0.96\n Residual                     33126.047 182.006             \nNumber of obs: 7038, groups:  subj_id, 69\n\nFixed effects:\n                    Estimate Std. Error t value\n(Intercept)          715.703     11.111  64.416\nprime_typederived    -31.312      5.571  -5.621\nprime_typeinflected  -33.956      5.320  -6.383\n\nCorrelation of Fixed Effects:\n            (Intr) prm_typd\nprm_typdrvd -0.175         \nprm_typnflc -0.259  0.463  \noptimizer (nloptwrap) convergence code: 0 (OK)\nboundary (singular) fit: see help('isSingular')\n```\n\n\n:::\n\n```{.r .cell-code}\nstr(ranef(varmorph.me))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 2\n $ target :'data.frame':\t102 obs. of  1 variable:\n  ..$ (Intercept): num [1:102] 1.68 -16.58 82.31 -43.64 -61.85 ...\n  ..- attr(*, \"postVar\")= num [1, 1, 1:102] 407 407 407 407 407 ...\n $ subj_id:'data.frame':\t69 obs. of  1 variable:\n  ..$ (Intercept): num [1:69] 36.6 14.9 165.7 -14.4 -80.9 ...\n  ..- attr(*, \"postVar\")= num [1, 1, 1:69] 304 304 304 304 304 ...\n - attr(*, \"class\")= chr \"ranef.mer\"\n```\n\n\n:::\n\n```{.r .cell-code}\nstr(ranef(varmorph.me2))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 1\n $ subj_id:'data.frame':\t69 obs. of  3 variables:\n  ..$ (Intercept)        : num [1:69] 36.9 13.6 162.5 -14.5 -79.4 ...\n  ..$ prime_typederived  : num [1:69] -2.288 5.425 10.421 0.991 -5.046 ...\n  ..$ prime_typeinflected: num [1:69] 0.0428 -0.7996 -2.4774 -0.0286 1.2046 ...\n  ..- attr(*, \"postVar\")= num [1:3, 1:3, 1:69] 320.57 -36.45 2.53 -36.45 159.69 ...\n - attr(*, \"class\")= chr \"ranef.mer\"\n```\n\n\n:::\n:::\n\n\n## Visualising mixed-effects models\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}