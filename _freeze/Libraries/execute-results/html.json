{
  "hash": "ae01a346e8bf35d3601eb70c023edcba",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Libraries\"\nauthor: Vladimir Buskin\nformat:\n  html:\n    self-contained: false\n    theme: default\n    toc: true\n    number-sections: true\n    slide-number: true\n    incremental: false\n    slide-level: 3\n    scrollable: true\n    \neditor: visual\n---\n\n\n## Recommended reading\n\n> @winter_statistics_2020: Chapter 1.13\n\n## Working with packages in R\n\nPackages expand the basic functionality of R by providing numerous\nquality-of-life improvements that not only considerably simplify common\ndata wrangling tasks but which also provide frameworks for\nstate-of-the-art methods for statistical analysis and natural language\nprocessing (NLP), among many other things.\n\n### Installation {#sec-libraries}\n\n::: {.callout-note collapse=\"false\" title=\"How do I install a library?\"}\nNavigate to `Packages` \\> `Install` and verify that the pop-up window\nsays `Install from: Repository (CRAN)`. You can now type in the name of\nthe package you would like to install under `Packages`.\n\n[Video tutorial on YouTube](https://www.youtube.com/watch?v=u1r5XTqrCTQ)\n:::\n\nThis reader will use functions from a variety of R packages. Please\ninstall the following ones:\n\n-   `quanteda` (for the analysis of text data)\n\n-   `tidyverse` (a framework for data manipulation and visualisation)\n\n-   `readxl` (for importing Microsoft Excel files)\n\n-   `writexl` (for exporting Microsoft Excel files)\n\n-   `kableExtra` (for creating beautiful tables)\n\n### Loading packages\n\nOnce the installation has been completed, you can proceed to load the\nlibraries using the code below. You can ignore the warning messages.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(quanteda)\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(writexl)\nlibrary(kableExtra)\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n::: {.callout-note collapse=\"false\" title=\"Activating libraries\"}\nWhenever you start a new R session (i.e., open RStudio), your libraries\nand their respective functions will be inactive. To re-activate a\nlibrary, either use the `library()` function or simply select it in the\n`Packages` tab.\n:::\n\nIt is good practice to only activate those packages that are necessary\nfor your analysis. While it won't be a problem for the small set of\npackages as shown here, loading dozens of packages increases the risk of\nobtaining \"homonymous\" functions which have the same name but perform\ndifferent operations. In this case, it might be helpful to\n\"disambiguate\" them by directly indicating which package a function is\nfrom:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreadxl::read_xlsx(...)\n```\n:::\n",
    "supporting": [
      "Libraries_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}